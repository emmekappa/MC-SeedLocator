/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_chunkgeneratorend_free: (a: number) => void;
export const chunkgeneratorend_new: (a: number) => number;
export const chunkgeneratorend_build_height_map: (a: number, b: number, c: number, d: number) => void;
export const __wbg_get_world_edition: (a: number) => number;
export const __wbg_set_world_edition: (a: number, b: number) => void;
export const __wbg_get_world_version: (a: number) => number;
export const __wbg_set_world_version: (a: number, b: number) => void;
export const __wbg_get_world_biome_size: (a: number, b: number) => void;
export const __wbg_set_world_biome_size: (a: number, b: number, c: number) => void;
export const __wbg_get_world_large_biomes: (a: number) => number;
export const __wbg_set_world_large_biomes: (a: number, b: number) => void;
export const world_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const __wbg_dungeonfinder_free: (a: number) => void;
export const dungeonfinder_new: (a: number) => number;
export const dungeonfinder_find: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_biomeprovider_free: (a: number) => void;
export const biomeprovider_new: (a: number) => number;
export const biomeprovider_get_ints0: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const biomeprovider_get_ints1: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const __wbg_biomeproviderend_free: (a: number) => void;
export const biomeproviderend_new: (a: number) => number;
export const biomeproviderend_get_height_value: (a: number, b: number, c: number, d: number, e: number) => number;
export const biomeproviderend_get_chunk_biome: (a: number, b: number, c: number) => number;
export const biomeproviderend_get_noise_biome: (a: number, b: number, c: number) => number;
export const biomeproviderend_get_chunk_area: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const __wbg_biomeprovidernether_free: (a: number) => void;
export const biomeprovidernether_new: (a: number) => number;
export const biomeprovidernether_get_noise_biome: (a: number, b: number, c: number) => number;
export const biomeprovidernether_get_chunk_biome: (a: number, b: number, c: number) => number;
export const biomeprovidernether_get_chunk_area: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const __wbg_multinoisebiomesource_free: (a: number) => void;
export const multinoisebiomesource_new: (a: number) => number;
export const multinoisebiomesource_get_noise_biome: (a: number, b: number, c: number, d: number) => number;
export const multinoisebiomesource_get_noise_biome_block: (a: number, b: number, c: number, d: number) => number;
export const multinoisebiomesource_get_noise_biome_at_height_type: (a: number, b: number, c: number, d: number) => number;
export const multinoisebiomesource_get_surface: (a: number, b: number, c: number, d: number, e: number) => number;
export const multinoisebiomesource_get_surface_block: (a: number, b: number, c: number, d: number, e: number) => number;
export const multinoisebiomesource_get_surface_area: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const multinoisebiomesource_get_noise_biome_area: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const multinoisebiomesource_get_noise_biome_area_at_height_type: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const multinoisebiomesource_find_spawn_position: (a: number, b: number) => void;
export const multinoisebiomesource_get_preliminary_surface_level: (a: number, b: number, c: number) => number;
export const multinoisebiomesource_get_noise_block: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_xoroshirorandom_free: (a: number) => void;
export const xoroshirorandom_new: (a: number, b: number, c: number, d: number) => number;
export const xoroshirorandom_new_from_seed: (a: number, b: number) => number;
export const xoroshirorandom_set_seed: (a: number, b: number, c: number) => void;
export const xoroshirorandom_next_int: (a: number, b: number) => number;
export const xoroshirorandom_next_long: (a: number, b: number) => void;
export const xoroshirorandom_next_float: (a: number) => number;
export const xoroshirorandom_next_double: (a: number) => number;
export const xoroshirorandom_skip_next_n: (a: number, b: number) => void;
export const xoroshirorandomworldgen_next_int: (a: number, b: number) => number;
export const xoroshirorandomworldgen_next_long: (a: number, b: number) => void;
export const xoroshirorandomworldgen_next_float: (a: number) => number;
export const xoroshirorandomworldgen_next_double: (a: number) => number;
export const xoroshirorandomworldgen_skip_next_n: (a: number, b: number) => void;
export const __wbg_oreveinfinder_free: (a: number) => void;
export const oreveinfinder_new: (a: number) => number;
export const oreveinfinder_find: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_cavefinder_free: (a: number) => void;
export const cavefinder_new: (a: number) => number;
export const cavefinder_find: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_lavafloodedcavefinder_free: (a: number) => void;
export const lavafloodedcavefinder_new: (a: number) => number;
export const lavafloodedcavefinder_find: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_lavalakehelper_free: (a: number) => void;
export const lavalakehelper_new: (a: number) => number;
export const lavalakehelper_test_feature_positions_java: (a: number, b: number) => number;
export const lavalakehelper_find_positions_bedrock: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_bedrockfeatureseedgenerator_free: (a: number) => void;
export const bedrockfeatureseedgenerator_new: (a: number, b: number, c: number) => number;
export const bedrockfeatureseedgenerator_get_seed_for_chunk: (a: number, b: number, c: number) => number;
export const xoroshirorandomworldgen_new_from_seed: (a: number, b: number) => number;
export const xoroshirorandomworldgen_set_seed: (a: number, b: number, c: number) => void;
export const xoroshirorandomworldgen_new: (a: number, b: number, c: number, d: number) => number;
export const __wbg_xoroshirorandomworldgen_free: (a: number) => void;
export const __wbg_world_free: (a: number) => void;
export const __wbindgen_export_0: (a: number, b: number) => number;
export const __wbindgen_export_1: (a: number, b: number, c: number, d: number) => number;
